def change_position(current_position: list, move_x: int, move_y: int, row_length: int, last_row: int):
	current_position[0] += move_y
	if current_position[0] > last_row - 1:
		current_position[0] = last_row - 1

	current_position[1] += move_x
	if current_position[1] > row_length - 1:
		current_position[1] = current_position[1] - row_length

	return current_position


def find_position_object(position: list, forest_map: list):
	object_on_position: str = forest_map[position[0]][position[1]]
	return object_on_position


def multiply(x: int, y: int):
	return x * y


def count_total_trees(counts_list: list):
	print(counts_list)
	total_trees_hit = multiply(counts_list[0], counts_list[1])
	for tree_count in counts_list[2:]:
		total_trees_hit = multiply(total_trees_hit, tree_count)
	return total_trees_hit


def count_slope_trees(slope: list, trees_cleaned: list):
	starting_position: list = [0, 0]
	position = starting_position
	trees_count: int = 0

	for _ in range(len(trees_cleaned) - 1):
		position = change_position(position, slope[0], slope[1], len(trees_cleaned[0]), len(trees_cleaned))
		map_object: str = find_position_object(position, trees_cleaned)
		if map_object == "#":
			trees_count += 1
		if position[0] == len(trees_cleaned) - 1:
			break

	return trees_count


def main():
	trees_input: str = '''.##.#.........#.....#....#...#.
	.#.#.#...#.......#.............
	......#..#....#.#...###.......#
	.......###......#.....#..##..#.
	..#...##.......#.......###.....
	....###.#....###......#....#..#
	......#..#....#...##...........
	..#..#....#...#.....####.......
	...#........#.#.......#..#...#.
	......#...#........#...#..##...
	#..#........#............#...##
	..#..#.#....#...........#...###
	#.#..#...........#.##.#.#....#.
	.#.#....#...##.....#...........
	.....##....#...#..............#
	...#....#...#.#.#.#...#........
	#....#....#.#.#..#....#..#..#..
	.................#..#.....#....
	#..###...#.#..#.#......#.......
	...#..........#......#....#....
	.#.#.........##..#.......#...#.
	.#..........#...#..#...........
	....##.#.......................
	.......#...........#...#.......
	...#...#..##...#....###..#....#
	....#.#.....##...##.#.#........
	...........#.#..#.#......#..#..
	.....#.....#....#...#........#.
	..#......#..#.........#.....#..
	.........................#...#.
	#...#...#....#........##....#..
	#..#.#.............#..........#
	.#.........#.....#..#.#.#..#.#.
	#...#..#.......####.#....##....
	##...##..#.#.#...#.#.....#..#.#
	.#..#....#.##........#...#....#
	#...#..##.#....##..#..#.#......
	.#........#.....#.#....##.##.#.
	...#...#........#..#.##.##.....
	....................#.#.#.#...#
	..####.#..##...#....#.....##...
	#......#.....#.#......#.#..#.##
	..#.....#..#...........##.#....
	#....#........#............#...
	..##....#..............#......#
	..#......#.#.......####......#.
	..............##....#....##.#..
	.#...............#....#....#.#.
	..#.#.#..#.......##.#..........
	.#...#.......#.#....#.##.......
	.....#.##...#...........#.#....
	..#.#..#...#..##...#.#.......##
	.#.....#....#.#......#.#.......
	....##.........#.#.............
	.......##.......#..............
	..........#......#......#....##
	..##.....#..#.#..........#.....
	...#....#.......#....##........
	.......#...........#...........
	...#.#......#.#........#....#..
	.....#...........#.#.#...#.#..#
	.#.#...#.#.#..........#.....###
	#........#...#.................
	...##.....#.....#..#..#.......#
	......##...........#..#....##..
	.........#............##...#...
	.....#.....##...##.............
	.#....#..#.#.#.#...#..#..#.....
	.....#..#.#..#....#..#.........
	....#.....#......#...#.........
	#..#..#.................#......
	.###.....#...#.#........##.#...
	..#...#....#.##..#.....#.#....#
	..#...##.................#.#...
	....##..........#..#..#..#....#
	....#..##....##.....#.#....#...
	.#.#.#.....##........#.##..##.#
	....#..#......#..#........#....
	.......#.....###.#....#.......#
	#....#.......#......##.#.......
	.##.#.........#.#..##..#....##.
	......#........#.#....#...#....
	.####.....#.........#.#......##
	##....#......#....#..#.#....##.
	...........###.#.....#..#......
	.......#...........#...........
	........###....#..#.#..........
	....#........#......#..........
	.........#......#..............
	...#...............#......#...#
	....#..##...#.........#...#....
	##........#.#....#......###....
	....#.......................#..
	#................#.#..#......##
	...#.#.....#...#...........#.##
	.#....#.##......#...##.#....#..
	#...#....#..............#..#..#
	.......#....#.##............#.#
	.....#.#.......#.#...#.........
	...#.....#..##...##...#........
	..#.......#..####..#..#...#....
	#.#................##...##.#..#
	.....#.....##.#.....#......#..#
	....#.#...#.........#.........#
	..#......#............#.....#..
	.....#..........#.#..#..##...##
	........#................#.#...
	#...#.#....##...###...#.#......
	.............##.#..##..........
	#..#......#...........#......#.
	#.#....#..........#.##....###..
	.............#.........#....#..
	#........#..#.#..#...#....#....
	..............#..............##
	.....#...#..............#.##...
	#...##..#...........#..........
	..#....#...#.#........#..#.#..#
	..##......#...............#....
	....#...#..###..#......###.#...
	.......##..#.#........#....#...
	..##...#.......#...#...........
	.#.......#.....#.#...##..#....#
	.............#.......#.#.#....#
	#.......#..#..#...#.#......##..
	#.##..#..#..#....##.#...###.#.#
	...##...#..#..#........#.#..#..
	#....##........................
	##...#...#......#.#.....#..#...
	......#............#....#......
	#......#.......#.......##.#....
	..................#..#..#.#....
	..#..................##.#......
	..##........#.#.....##..#..#.#.
	#....#..............#....####..
	#..#..........................#
	..#.#.#.#....#.......#....#.#..
	.....#.#........#..........#.#.
	........#.....#.......#........
	#.....#....#.###.....#.......#.
	.....##.#...#.#..#...#.#.#.....
	......##...#.#...##..........#.
	.#............#.....#..#....#..
	.#................#.#..#.......
	....................##...##....
	#.......##...#.....#..#........
	.##....#.#.#.#...........#...#.
	..#.#..#.#.........#...........
	...#......#.....#...##.........
	..........#.#.....###.#........
	.............#.....##..........
	.........#...####........#.####
	...................#....#......
	.....#.........#.#....#..#...#.
	.##...#.......##.#...#.#.#..#..
	.....##........#....#...#.##.#.
	#...#...#.#....#..............#
	#..#.##.............#..........
	..#...#..#.#.##..............##
	#......#.#...##..........#.##..
	.##.#...#...#.........#.#......
	......#........##.#..#.........
	#..#.......#......#.#..#.#.....
	.#..#...........#.#.##.....#...
	.....................#..#.#....
	........#...##......#.....##...
	#.............#...##....##....#
	#.#...........#....##.#......##
	.....#.....#.#..........###..#.
	....#...#....##....#..##.......
	.#....#....#.......#.#.....#...
	.#...#.......##...##........#..
	......##.......#.##.#.###......
	....##.......#......#..........
	...................#..##.......
	......................#...##...
	...##....#.#..#..#.............
	.#......##..........#...#......
	....##..#....#..#...#...####.#.
	...#.......#.......#........#.#
	#.........#..#...#...##...#.#.#
	....#...#.......#...#....#.....
	...#.....#.##..##.#.......##.##
	.......#....#........#.........
	.....#...#....#..#....#....#...
	.##....#...#........#...#.#...#
	.......##............#..#...#..
	#.#...#....#......#.#..........
	.#.##...........#........#.....
	.#....#.............#.#.##.....
	#.......###..#...###.........#.
	#..#.#.......#.........#...#..#
	..........#......#........#...#
	.#.#...#.##.......##...........
	.....#.........#.....#.........
	.........#.........#....##.#..#
	.#.......##..##..#.....#...#...
	.#.....##...#..#..............#
	..##...#..#..#.#...#..........#
	.#.......####......#......####.
	##..##........#.....#........#.
	..##.#..#.#....................
	...........#..#...##....##.....
	..#.#........#.........#....##.
	..#...#..##..###.#..###........
	......#..#.............#..##...
	.##.........#.#..#...#.##.###..
	.#...............#...........#.
	.#....#........#....#........##
	..#####.#.#..#.#........##...#.
	###....#....#...#..............
	.....#...##............#...#...
	##...........##.#.##.....#.....
	..............#..#.....#...#...
	...................#...........
	#..........##.........#........
	...#.........#..#.....#..#..#..
	....###.#......#......##....#..
	#......#..........#...#........
	...#.#...#..#..........##......
	.....##.....#.#............##..
	..#..#.###....#.#.#...##....#..
	...#........#....##.......#....
	.#.............#..##.......#...
	..#.#..###..#.....#...##.......
	.........#......##...#.#..#....
	.............#....##....#.#....
	#..#...#....#.#...#......##....
	.............#.#......#.....###
	#.##....#........#.............
	.....#...#.####...#.....#......
	....#....###....##.......#.....
	..#....##..#....#.#.......#....
	...#.....#....#.........#......
	.#......#.#....#.#........#....
	.......#......#.....#.#..#.....
	#......#.........##.##.#...#...
	..#.###...................#....
	....#..#....##.#........#....#.
	...........#..........#......#.
	.#..#.#...###..........#..#...#
	...#...##..#....#...#..........
	.#........#.................##.
	....#.......##....#...#........
	#.#...##.##...#.#.......#...#..
	.....#.#.##.#......#..#..##....
	.....##...#.#.....#...#........
	#.#.......#..#..........##.....
	................#......#..#.#.#
	#......#...#...................
	...#.....##.#.........#.#..#..#
	...#..##..##.......#....#......
	....##...#....#..#...........#.
	..#..#......#...#..#...........
	...#.##....#...##.......#......
	.......#....#..#..##..#..#....#
	.#.................#.#...#.##..
	.....#..................#..#.#.
	...#......##...#...........#...
	..#.........#....#..#...#.....#
	..#...#.....#.........##.#.....
	.....#.#....##...............#.
	....#...#............#.........
	.....#.....###............#....
	..#.#.#.......#....#...........
	...........##...##...#.......#.
	.........###.#......#..........
	.#.......#....#.....#.##..#...#
	..#..................#..###....
	..#....#...#......##.........#.
	........#..#........#.........#
	.#..#......#.........#.........
	...#..##.....#....#....#.....#.
	......#.#............###.....##
	.......#........#.......#.#....
	..#.............#..............
	.............##..#.#.#....#....
	.................#....#.#......
	##..#.#.......#....#.....#.....
	.##............##.#.......#.#..
	#..#...........##......#.......
	.##......#####..##.#....#.#....
	.......##.....#...#........#...
	.#.#.....##....#..#....#..#...#
	............##.#.....##.#......
	........##...###.#......#......
	......#..#.#...#..#............
	.........#...........#......#..
	.#.........#............##.....
	.#..#..#...#.#.............#...
	......#.#..##...#.#...........#
	#.##.......#...#.........#.....
	.....#..#............#....##...
	.#......#........#.............
	..#...#....#..#.......###......
	....#.......###.#.#...........#
	.............#...##............
	.##.#.#.#...........#...#....#.
	............##.........#......#
	...............#......#...#....
	...#.....#..###..#...........#.
	.#........#.....##........#.#..
	....#.#.......#..#..#...##.#.#.
	.......##...........#...#......
	....#.#..##......#.......#.....
	..#........#.#......#.#........
	........#....#..#....#..##.....
	.#.........##..........#.#.....
	..##...##.....##......##..#....
	.###.....##...........##.#...##
	...#................#.......#..
	#.......#.#.#..#.#.##..#...#...
	.#.#.......#..#................
	..#.#.#......#............#....
	#.....#.###..#.#...#...........
	#...........#..........#.#.#.##
	..#.#...#......##.....#........
	........#.......#.#...#...#....
	..#..........#......###......#.
	..........##.#....#.....#.##...
	..#.....#......#.........#..##.
	.#...#........#..#.#..#...##..#
	..###........#......#.#........
	..#.##.#....#.#....#.#...#.....'''
	trees_cleaned: list = trees_input.split("\n\t")
	trees_input_test: str = '''..##.......
	#...#...#..
	.#....#..#.
	..#.#...#.#
	.#...##..#.
	..#.##.....
	.#.#.#....#
	.#........#
	#.##...#...
	#...##....#
	.#..#...#.#'''
	trees_cleaned_test: list = trees_input_test.split("\n\t")

	slopes_list: list = [[1, 1], [3, 1], [5, 1], [7, 1], [1, 2]]
	trees_counts_list: list = []
	trees_counts_list_test: list = []

	for slope in slopes_list:
		trees_counts_list.append(count_slope_trees(slope, trees_cleaned))
		trees_counts_list_test.append(count_slope_trees(slope, trees_cleaned_test))

	print(count_total_trees(trees_counts_list))
	print(count_total_trees(trees_counts_list_test))


if __name__ == '__main__':
	main()
